// Tm_view6.odl : type library source for ActiveX Control project.

// This file will be processed by the Make Type Library (mktyplib) tool to
// produce the type library (Tm_view6.tlb) that will become a resource in
// Tm_view6.ocx.

#include <olectl.h>
#include <idispids.h>
#include ".\include\dispid.h"

[ uuid(230C066F-16DF-4A07-8F28-8FD7F2E7D721), version(6.3),/* Replace 1 */
  helpfile("Tm_view6.hlp"),
  helpstring("TMView 6 ActiveX Control"),
  control ]
library TM_VIEW6Lib
{
	importlib(STDOLE_TLB);
	importlib(STDTYPE_TLB);

	//  Primary dispatch interface for CTMViewCtrl

	[ uuid(B6EE6D22-30F7-434B-96D2-DFE4A99E246A),/* Replace 2 */
	  helpstring("Dispatch interface for TMView 6 Control"), hidden ]
	dispinterface _DTm_view6
	{
		properties:
			// NOTE - ClassWizard will maintain property information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_PROP(CTMViewCtrl)
			[id(DISPID_BACKCOLOR), bindable, requestedit] OLE_COLOR BackColor;
			[id(DISPID_BORDERSTYLE), bindable, requestedit] short BorderStyle;
			[id(DISPID_ENABLED), bindable, requestedit] boolean Enabled;
			[id(1)] short RedactColor;
			[id(2)] short HighlightColor;
			[id(3)] short AnnColor;
			[id(4)] short AnnTool;
			[id(5)] short AnnThickness;
			[id(6)] boolean ScaleImage;
			[id(7)] short Rotation;
			[id(8)] short MaxZoom;
			[id(9)] boolean FitToImage;
			[id(10)] short Action;
			[id(11)] boolean EnableErrors;
			[id(12)] BSTR BackgroundFile;
			[id(13)] boolean AutoAnimate;
			[id(14)] boolean LoopAnimation;
			[id(53)] short VerBuild;
			[id(15)] boolean HideScrollBars;
			[id(16)] short PanPercent;
			[id(17)] short ZoomOnLoad;
			[id(18)] short CalloutColor;
			[id(19)] short CalloutFrameThickness;
			[id(20)] short CalloutFrameColor;
			[id(21)] boolean RightClickPan;
			[id(22)] short SplitFrameThickness;
			[id(23)] short SplitFrameColor;
			[id(24)] boolean SplitScreen;
			[id(25)] short ActivePane;
			[id(26)] boolean SyncPanes;
			[id(27)] BSTR LeftFile;
			[id(28)] BSTR RightFile;
			[id(29)] boolean SyncCalloutAnn;
			[id(30)] boolean PenSelectorVisible;
			[id(31)] short PenSelectorColor;
			[id(32)] short PenSelectorSize;
			[id(33)] boolean KeepAspect;
			[id(34)] short BitonalScaling;
			[id(35)] boolean ZoomToRect;
			[id(54)] BSTR VerTextLong;
			[id(36)] BSTR AnnFontName;
			[id(37)] short AnnFontSize;
			[id(38)] boolean AnnFontBold;
			[id(39)] boolean AnnFontStrikeThrough;
			[id(40)] boolean AnnFontUnderline;
			[id(41)] OLE_COLOR DeskewBackColor;
			[id(42)] boolean AnnotateCallouts;
			[id(43)] short PrintOrientation;
			[id(44)] OLE_COLOR PrintBorderColor;
			[id(45)] float PrintLeftMargin;
			[id(46)] float PrintRightMargin;
			[id(47)] float PrintTopMargin;
			[id(48)] float PrintBottomMargin;
			[id(49)] float PrintBorderThickness;
			[id(50)] boolean PrintCallouts;
			[id(51)] boolean PrintBorder;
			[id(52)] boolean PrintCalloutBorders;
			//}}AFX_ODL_PROP

			//	These properties were added in rev 5.1
			[id(DISPID_ANNCOLORDEPTH)] short AnnColorDepth;

			//	These properties were added in rev 5.2
			[id(DISPID_SPLITHORIZONTAL)] boolean SplitHorizontal;

			//	These properties were added in rev 5.3
			[id(DISPID_QFACTOR)] short QFactor;

			//	These properties were added in rev 5.4
			[id(DISPID_RESIZECALLOUTS)] boolean ResizeCallouts;
			[id(DISPID_CALLOUTHANDLECOLOR)] OLE_COLOR CalloutHandleColor;

			//	These properties were added in rev 5.7
			[id(DISPID_SHADEONCALLOUT)] boolean ShadeOnCallout;
			[id(DISPID_CALLOUTSHADEGRAYSCALE)] short CalloutShadeGrayscale;

			//	These properties were added in rev 5.8
			[id(DISPID_PANCALLOUTS)] boolean PanCallouts;
			[id(DISPID_ZOOMCALLOUTS)] boolean ZoomCallouts;

			//	These properties were added in rev 6.0.0
			[id(DISPID_LOADASYNC)] boolean LoadAsynch;
			[id(DISPID_ENABLEAXERRORS)] boolean EnableAxErrors;

			//	These properties were added in rev 6.1.0
			[id(DISPID_VERMAJOR)] short VerMajor;
			[id(DISPID_VERMINOR)] short VerMinor;
			[id(DISPID_VERQEF)] short VerQEF;
			[id(DISPID_VERTEXTSHORT)] BSTR VerTextShort;
			[id(DISPID_VERBUILDDATE)] BSTR VerBuildDate;

		methods:
			// NOTE - ClassWizard will maintain method information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_METHOD(CTMViewCtrl)
			[id(55)] void Redraw();
			[id(56)] short SetAnnotationProperties(long lFlags);
			[id(57)] void SetPrinter();
			[id(58)] short LoadFile(BSTR lpszFilename, short sPane);
			[id(59)] short Print(boolean bFullImage, short sPane);
			[id(60)] short DestroyCallouts(short sPane);
			[id(61)] short Erase(short sPane);
			[id(62)] float GetAspectRatio(short sPane);
			[id(63)] short GetCurrentPage(short sPane);
			[id(64)] float GetImageHeight(short sPane);
			[id(65)] float GetImageWidth(short sPane);
			[id(66)] short GetPageCount(short sPane);
			[id(67)] short GetPanStates(short sPane);
			[id(68)] float GetSrcRatio(short sPane);
			[id(69)] float GetZoomFactor(short sPane);
			[id(70)] short GetZoomState(short sPane);
			[id(71)] boolean IsAnimation(short sPane);
			[id(72)] boolean IsLoaded(short sPane);
			[id(73)] boolean IsPlaying(short sPane);
			[id(74)] short NextPage(short sPane);
			[id(75)] short PlayAnimation(boolean bPlay, boolean bContinuous, short sPane);
			[id(76)] short PrevPage(short sPane);
			[id(77)] short Realize(short sPane);
			[id(78)] boolean Pan(short sDirection, short sPane);
			[id(79)] short Render(OLE_HANDLE hDc, float fLeft, float fTop, float fWidth, float fHeight, short sPane);
			[id(80)] void ResetZoom(short sPane);
			[id(81)] void ResizeSourceToImage(short sPane);
			[id(82)] void ResizeSourceToView(short sPane);
			[id(83)] void Rotate(boolean bRedraw, short sPane);
			[id(84)] void RotateCcw(boolean bRedraw, short sPane);
			[id(85)] void RotateCw(boolean bRedraw, short sPane);
			[id(86)] short Save(BSTR lpszFilename, short sPane);
			[id(87)] short SaveZap(BSTR lpszFilename, short sPane);
			[id(88)] short ShowCallouts(boolean bShow, short sPane);
			[id(89)] void ZoomFullHeight(short sPane);
			[id(90)] void ZoomFullWidth(short sPane);
			[id(91)] short FirstPage(short sPane);
			[id(92)] short LastPage(short sPane);
			[id(93)] short GetColor();
			[id(94)] void SetColor(short sColor);
			[id(95)] void SetData(short sPane, long lData);
			[id(96)] long GetData(short sPane);
			[id(97)] short GetSelectCount(short sPane);
			[id(98)] short DeleteSelections(short sPane);
			[id(99)] short DeleteLastAnn(short sPane);
			[id(100)] short LoadZap(BSTR lpszFilename, boolean bUseView, boolean bScaleView, boolean bCallouts, short sPane, BSTR lpszSourceFile);
			[id(101)] short Copy(short sPane);
			[id(102)] short Paste(short sPane);
			[id(103)] long GetRGBColor(short sColor);
			[id(104)] short ViewImageProperties(short sPane);
			[id(105)] boolean SetPrinterByName(BSTR lpName);
			[id(106)] BSTR GetDefaultPrinter();
			[id(107)] boolean CanPrint();
			[id(108)] BSTR GetCurrentPrinter();
			[id(109)] short GetImageProperties(long lpProperties, short sPane);
			[id(110)] short Deskew(short sPane);
			[id(111)] BSTR GetRegisteredPath();
			[id(112)] BSTR GetClassIdString();
			[id(113)] short Despeckle(short sPane);
			[id(114)] short GetLeadToolError(short sPane);
			[id(115)] short DotRemove(short sPane, long lMinWidth, long lMinHeight, long lMaxWidth, long lMaxHeight);
			[id(116)] short HolePunchRemove(short sPane, long lMinWidth, long lMinHeight, long lMaxWidth, long lMaxHeight, long lLocation);
			[id(117)] short Smooth(short sPane, long lLength, short sFavorLong);
			[id(118)] short BorderRemove(short sPane, long lBorderPercent, long lWhiteNoise, long lVariance, long lLocation);
			[id(119)] short Cleanup(short sPane, BSTR lpszSaveAs);
			[id(120)] short SetupPrintPage();
			[id(121)] short PrintEx(OLE_HANDLE hDC, short bFullImage, short bAutoRotate, short sLeft, short sTop, short sWidth, short sHeight, short sPane);
			[id(122)] short RescaleZapCallouts();
			[id(123)] short ShowDiagnostics(boolean bShow);
			[id(124)] long DrawSourceRectangle(short sLeft, short sTop, short sRight, short sBottom, OLE_COLOR lColor, short sTransparency, boolean bLocked, short sPane);
			[id(125)] short DeleteAnn(long lAnnotation, short sPane);
			[id(126)] long DrawText(BSTR lpszText, short sLeft, short sTop, short sRight, short sBottom, OLE_COLOR lColor, BSTR lpszFont, short sSize, boolean bLocked, short sPane);
			[id(127)] long DrawSourceText(BSTR lpszText, short sLeft, short sTop, short sRight, short sBottom, OLE_COLOR lColor, BSTR lpszFont, short sSize, boolean bLocked, short sPane);
			[id(128)] short DrawTmaxRedaction(long pRedaction, short sPane);
			[id(129)] short DrawTmaxRedactions(long paRedactions, short sPane);
			[id(130)] short DeleteTmaxRedaction(long pRedaction, short sPane);
			[id(131)] short DeleteTmaxRedactions(long paRedactions, short sPane);
			[id(132)] long DrawRectangle(short sLeft, short sTop, short sRight, short sBottom, OLE_COLOR lColor, short sTransparency, boolean bLocked, short sPane);
			[id(133)] short LockAnn(long lAnnotation, short sPane);
			[id(134)] short UnlockAnn(long lAnnotation, short sPane);
			[id(135)] OLE_COLOR GetOleColor(short sTmviewColor);
			[id(136)] short GetCalloutCount(short sPane);
			[id(137)] boolean SetPrinterProperties(OLE_HANDLE hWnd);
			[id(138)] short SetProperties(BSTR lpszFilename, BSTR lpszSection);
			[id(139)] short SaveProperties(BSTR lpszFilename, BSTR lpszSection);
			[id(140)] short HolePunchRemove2(short sPane, long lMinHolePunches, long lMaxHolePunches, long lLocation);
			[id(141)] short SavePages(BSTR lpszFilename, BSTR lpszFolder, BSTR lpszPrefix);
			[id(142)] short ShowPrinterCaps();
			[id(143)] void EnableDIBPrinting(short bEnable);
			[id(144)] short SwapPanes();
			[id(145)] short SaveSplitZap(BSTR lpszTLFilename, BSTR lpszBRFilename);
			//}}AFX_ODL_METHOD

			[id(DISPID_ABOUTBOX)] void AboutBox();
			[id(146)] boolean DoGesturePan(LONG lCurrentX, LONG lCurrentY, LONG lLastX, LONG lLastY, BOOL* bSmooth);
			[id(147)] void DoGestureZoom(FLOAT zoomFactor);
			[id(148)] void SetZoomedNextPage(BOOL bZoomed);
			[id(149)] void DoGestureZoomTop(FLOAT zoomFactor);
			[id(150)] void DoGestureZoomBottom(FLOAT zoomFactor);
};

	//  Event dispatch interface for CTMViewCtrl

	[ uuid(A46EC24D-5EE5-45EB-AAEA-8DE5A1EA8D22),/* Replace 3 */
	  helpstring("Event interface for TMView Control") ]
	dispinterface _DTm_view6Events
	{
		properties:
			//  Event interface has no properties

		methods:
			// NOTE - ClassWizard will maintain event information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_EVENT(CTMViewCtrl)
			[id(1)] void MouseClick(short Button, short Key);
			[id(2)] void MouseDblClick(short Button, short Key);
			[id(3)] void CreateCallout(OLE_HANDLE hCallout);
			[id(4)] void DestroyCallout(OLE_HANDLE hCallout);
			[id(5)] void SelectPane(short sPane);
			[id(6)] void OpenTextBox(short sPane);
			[id(7)] void CloseTextBox(short sPane);
			[id(DISPID_MOUSEMOVE)] void MouseMove(short Button, short Shift, OLE_XPOS_PIXELS x, OLE_YPOS_PIXELS y);
			[id(8)] void SelectCallout(OLE_HANDLE hCallout, short sPane);
			[id(9)] void StartTextEdit(short sPane);
			[id(10)] void StopTextEdit(short sPane);
			[id(11)] void AnnotationDeleted(long lAnnotation, short sPane);
			[id(12)] void AnnotationModified(long lAnnotation, short sPane);
			[id(13)] void AnnotationDrawn(long lAnnotation, short sPane);
			[id(14)] void CalloutResized(OLE_HANDLE hCallout, short sPane);
			[id(15)] void CalloutMoved(OLE_HANDLE hCallout, short sPane);
			[id(DISPID_MOUSEDOWN)] void MouseDown(short Button, short Shift, OLE_XPOS_PIXELS x, OLE_YPOS_PIXELS y);
			[id(DISPID_MOUSEUP)] void MouseUp(short Button, short Shift, OLE_XPOS_PIXELS x, OLE_YPOS_PIXELS y);
			[id(16)] void AxError(BSTR lpszMessage);
			[id(17)] void AxDiagnostic(BSTR lpszMethod, BSTR lpszMessage);
			[id(18)] void SavedPage(BSTR lpszSourceFile, BSTR lpszPageFile, short sPage, short sTotal);
			//}}AFX_ODL_EVENT
	};

	//  Class information for CTMViewCtrl

	[ uuid(5A3A9FC9-D747-4B92-9106-A32C7E6E84A3), /* Replace 4 */
	  helpstring("TMView 6 Control"), control ]
	coclass Tm_view6
	{
		[default] dispinterface _DTm_view6;
		[default, source] dispinterface _DTm_view6Events;
	};


	//{{AFX_APPEND_ODL}}
	//}}AFX_APPEND_ODL}}
};
