// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "leaddlg.h"

// Dispatch interfaces referenced by this interface
#include "Font.h"
#include "SaveType.h"

/////////////////////////////////////////////////////////////////////////////
// CLeadDlg

IMPLEMENT_DYNCREATE(CLeadDlg, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CLeadDlg properties

/////////////////////////////////////////////////////////////////////////////
// CLeadDlg operations

unsigned long CLeadDlg::AddRef()
{
	unsigned long result;
	InvokeHelper(0x60000001, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

unsigned long CLeadDlg::Release()
{
	unsigned long result;
	InvokeHelper(0x60000002, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetFont(LPDISPATCH newValue)
{
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(DISPID_FONT, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

COleFont CLeadDlg::GetFont()
{
	LPDISPATCH pDispatch;
	InvokeHelper(DISPID_FONT, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return COleFont(pDispatch);
}

long CLeadDlg::GetAngle()
{
	long result;
	InvokeHelper(0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetAngle(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetAngle(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

BOOL CLeadDlg::GetAngleFlag()
{
	BOOL result;
	InvokeHelper(0x3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetAngleFlag(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CLeadDlg::GetUIFlags()
{
	long result;
	InvokeHelper(0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetUIFlags(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CLeadDlg::GetShowHelpButton()
{
	BOOL result;
	InvokeHelper(0x7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShowHelpButton(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

short CLeadDlg::GetNewWidth()
{
	short result;
	InvokeHelper(0x8, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetNewWidth(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetNewHeight()
{
	short result;
	InvokeHelper(0x9, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetNewHeight(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetSize(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xa, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

long CLeadDlg::GetBitmap()
{
	long result;
	InvokeHelper(0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetBitmap(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetBitsPerPixel()
{
	short result;
	InvokeHelper(0xc, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetBitsPerPixel(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetPaletteFlags()
{
	short result;
	InvokeHelper(0xd, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetPaletteFlags(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetDitherFlags()
{
	short result;
	InvokeHelper(0xe, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetDitherFlags(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetColorRes(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

long CLeadDlg::GetFileDlgFlags()
{
	long result;
	InvokeHelper(0x10, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetFileDlgFlags(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CLeadDlg::GetDialogTitle()
{
	CString result;
	InvokeHelper(0x11, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetDialogTitle(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CLeadDlg::GetFileName()
{
	CString result;
	InvokeHelper(0x12, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetFileName(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CLeadDlg::GetFileTitle()
{
	CString result;
	InvokeHelper(0x13, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetFileTitle(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CLeadDlg::GetFilter()
{
	CString result;
	InvokeHelper(0x14, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetFilter(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

long CLeadDlg::GetFilterIndex()
{
	long result;
	InvokeHelper(0x15, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetFilterIndex(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CLeadDlg::GetInitialDir()
{
	CString result;
	InvokeHelper(0x16, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetInitialDir(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

long CLeadDlg::GetMaxFileSize()
{
	long result;
	InvokeHelper(0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetMaxFileSize(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CLeadDlg::GetPageNumber()
{
	long result;
	InvokeHelper(0x18, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetPageNumber(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CLeadDlg::GetLoadPasses()
{
	long result;
	InvokeHelper(0x19, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetLoadPasses(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CLeadDlg::GetLoadCompressed()
{
	BOOL result;
	InvokeHelper(0x1a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetLoadCompressed(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CLeadDlg::GetLoadRotated()
{
	BOOL result;
	InvokeHelper(0x1b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetLoadRotated(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

short CLeadDlg::FileOpen(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1c, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

long CLeadDlg::GetMaxFileTitleSize()
{
	long result;
	InvokeHelper(0x1d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetMaxFileTitleSize(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CLeadDlg::GetThumbnail()
{
	long result;
	InvokeHelper(0x1e, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetThumbnail(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetSaveBitsPerPixel()
{
	short result;
	InvokeHelper(0x1f, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSaveBitsPerPixel(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetSaveFormat()
{
	short result;
	InvokeHelper(0x20, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSaveFormat(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x20, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetSaveQFactor()
{
	short result;
	InvokeHelper(0x21, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSaveQFactor(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetSaveMulti()
{
	short result;
	InvokeHelper(0x22, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSaveMulti(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x22, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CLeadDlg::GetSaveProgressive()
{
	BOOL result;
	InvokeHelper(0x23, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSaveProgressive(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

short CLeadDlg::GetSavePasses()
{
	short result;
	InvokeHelper(0x24, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSavePasses(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CLeadDlg::GetSaveWithStamp()
{
	BOOL result;
	InvokeHelper(0x25, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSaveWithStamp(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x25, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

short CLeadDlg::GetSaveStampBits()
{
	short result;
	InvokeHelper(0x26, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSaveStampBits(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x26, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetSaveStampWidth()
{
	short result;
	InvokeHelper(0x27, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSaveStampWidth(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x27, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetSaveStampHeight()
{
	short result;
	InvokeHelper(0x28, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSaveStampHeight(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x28, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CLeadDlg::GetSaveInterlaced()
{
	BOOL result;
	InvokeHelper(0x29, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSaveInterlaced(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x29, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

short CLeadDlg::FileSave(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2a, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

short CLeadDlg::GetDirection()
{
	short result;
	InvokeHelper(0x2c, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetDirection(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetDepth()
{
	short result;
	InvokeHelper(0x2d, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetDepth(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x2d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetEmboss(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2e, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

short CLeadDlg::GetRange()
{
	short result;
	InvokeHelper(0x2f, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetRange(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x2f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetChannel()
{
	short result;
	InvokeHelper(0x30, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetChannel(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x30, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetNoise(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x31, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

short CLeadDlg::GetGamma()
{
	short result;
	InvokeHelper(0x32, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetGamma(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x32, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetGamma(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x33, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

short CLeadDlg::GetLow()
{
	short result;
	InvokeHelper(0x34, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetLow(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x34, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetHigh()
{
	short result;
	InvokeHelper(0x35, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetHigh(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x35, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetRange(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x36, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

short CLeadDlg::GetChange()
{
	short result;
	InvokeHelper(0x37, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetChange(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CLeadDlg::GetProcess()
{
	long result;
	InvokeHelper(0x38, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetProcess(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x38, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetChange(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x39, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

short CLeadDlg::GetSpatialFilterType()
{
	short result;
	InvokeHelper(0x3a, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSpatialFilterType(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x3a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetBinaryFilterType()
{
	short result;
	InvokeHelper(0x3b, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetBinaryFilterType(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x3b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetFilter(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3c, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

short CLeadDlg::GetFilterType()
{
	short result;
	InvokeHelper(0x3d, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetFilterType(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x3d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CLeadDlg::GetPreviewEnabled()
{
	BOOL result;
	InvokeHelper(0x3e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetPreviewEnabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x3e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CLeadDlg::GetEnableMethodErrors()
{
	BOOL result;
	InvokeHelper(0x3f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetEnableMethodErrors(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x3f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

short CLeadDlg::GetLowBit()
{
	short result;
	InvokeHelper(0x40, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetLowBit(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x40, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetHighBit()
{
	short result;
	InvokeHelper(0x41, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetHighBit(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x41, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CLeadDlg::GetLowLevel()
{
	long result;
	InvokeHelper(0x42, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetLowLevel(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x42, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CLeadDlg::GetHighLevel()
{
	long result;
	InvokeHelper(0x43, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetHighLevel(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x43, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

unsigned long CLeadDlg::GetStartColor()
{
	unsigned long result;
	InvokeHelper(0x44, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetStartColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x44, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

unsigned long CLeadDlg::GetEndColor()
{
	unsigned long result;
	InvokeHelper(0x45, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetEndColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x45, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

short CLeadDlg::GetWindowLevel(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x46, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

short CLeadDlg::GetEffect()
{
	short result;
	InvokeHelper(0x47, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetEffect(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x47, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetGrain()
{
	short result;
	InvokeHelper(0x48, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetGrain(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x48, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetDelay()
{
	short result;
	InvokeHelper(0x49, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetDelay(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x49, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetMaxPass()
{
	short result;
	InvokeHelper(0x4a, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetMaxPass(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x4a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CLeadDlg::GetTransparent()
{
	BOOL result;
	InvokeHelper(0x4b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetTransparent(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x4b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

unsigned long CLeadDlg::GetTransparentColor()
{
	unsigned long result;
	InvokeHelper(0x4c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetTransparentColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x4c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

short CLeadDlg::GetWandWidth()
{
	short result;
	InvokeHelper(0x4d, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetWandWidth(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x4d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

unsigned long CLeadDlg::GetWandColor()
{
	unsigned long result;
	InvokeHelper(0x4e, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetWandColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x4e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

short CLeadDlg::GetEffect(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x4f, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

short CLeadDlg::GetGradientStyle()
{
	short result;
	InvokeHelper(0x50, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetGradientStyle(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x50, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetGradientSteps()
{
	short result;
	InvokeHelper(0x51, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetGradientSteps(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x51, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetGradient(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x52, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

short CLeadDlg::GetTransition()
{
	short result;
	InvokeHelper(0x53, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetTransition(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x53, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetTransition(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x54, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

short CLeadDlg::GetShape()
{
	short result;
	InvokeHelper(0x55, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShape(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x55, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetShapeBackStyle()
{
	short result;
	InvokeHelper(0x56, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeBackStyle(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x56, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetShapeFillStyle()
{
	short result;
	InvokeHelper(0x57, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeFillStyle(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x57, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

unsigned long CLeadDlg::GetShapeBorderColor()
{
	unsigned long result;
	InvokeHelper(0x58, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeBorderColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x58, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

short CLeadDlg::GetShapeBorderStyle()
{
	short result;
	InvokeHelper(0x59, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeBorderStyle(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x59, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetShapeBorderWidth()
{
	short result;
	InvokeHelper(0x5a, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeBorderWidth(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x5a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetShapeInnerStyle()
{
	short result;
	InvokeHelper(0x5b, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeInnerStyle(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x5b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetShapeInnerWidth()
{
	short result;
	InvokeHelper(0x5c, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeInnerWidth(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x5c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

unsigned long CLeadDlg::GetShapeInnerHiliteColor()
{
	unsigned long result;
	InvokeHelper(0x5d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeInnerHiliteColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x5d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

unsigned long CLeadDlg::GetShapeInnerShadowColor()
{
	unsigned long result;
	InvokeHelper(0x5e, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeInnerShadowColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x5e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

short CLeadDlg::GetShapeOuterStyle()
{
	short result;
	InvokeHelper(0x5f, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeOuterStyle(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x5f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetShapeOuterWidth()
{
	short result;
	InvokeHelper(0x60, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeOuterWidth(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x60, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

unsigned long CLeadDlg::GetShapeOuterHiliteColor()
{
	unsigned long result;
	InvokeHelper(0x61, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeOuterHiliteColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x61, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

unsigned long CLeadDlg::GetShapeOuterShadowColor()
{
	unsigned long result;
	InvokeHelper(0x62, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeOuterShadowColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x62, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

short CLeadDlg::GetShadowXDepth()
{
	short result;
	InvokeHelper(0x63, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShadowXDepth(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x63, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetShadowYDepth()
{
	short result;
	InvokeHelper(0x64, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShadowYDepth(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

unsigned long CLeadDlg::GetShadowColor()
{
	unsigned long result;
	InvokeHelper(0x65, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShadowColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

short CLeadDlg::Get3dShape(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x66, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

long CLeadDlg::GetShapeBackgroundBitmap()
{
	long result;
	InvokeHelper(0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetShapeBackgroundBitmap(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CLeadDlg::GetSampleText()
{
	CString result;
	InvokeHelper(0x68, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSampleText(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

short CLeadDlg::GetTextStyle()
{
	short result;
	InvokeHelper(0x69, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetTextStyle(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetTextAlign()
{
	short result;
	InvokeHelper(0x6a, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetTextAlign(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CLeadDlg::GetTextWordWrap()
{
	BOOL result;
	InvokeHelper(0x6b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetTextWordWrap(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

unsigned long CLeadDlg::GetTextColor()
{
	unsigned long result;
	InvokeHelper(0x6c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetTextColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

unsigned long CLeadDlg::GetTextHiliteColor()
{
	unsigned long result;
	InvokeHelper(0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetTextHiliteColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL CLeadDlg::GetTextUseForegroundImage()
{
	BOOL result;
	InvokeHelper(0x6e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetTextUseForegroundImage(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

short CLeadDlg::Get3dText(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x6f, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

long CLeadDlg::GetTextForegroundBitmap()
{
	long result;
	InvokeHelper(0x70, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetTextForegroundBitmap(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

unsigned long CLeadDlg::GetForeColor()
{
	unsigned long result;
	InvokeHelper(0x71, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetForeColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

unsigned long CLeadDlg::GetBackColor()
{
	unsigned long result;
	InvokeHelper(0x72, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetBackColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

void CLeadDlg::UnlockSupport(short iType, LPCTSTR pszKey)
{
	static BYTE parms[] =
		VTS_I2 VTS_BSTR;
	InvokeHelper(0x73, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 iType, pszKey);
}

long CLeadDlg::IsSupportLocked(short iType)
{
	long result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x74, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		iType);
	return result;
}

CString CLeadDlg::GetDirectory()
{
	CString result;
	InvokeHelper(0x75, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetDirectory(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

short CLeadDlg::GetDirectory(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x76, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

CString CLeadDlg::GetDlgString(long nString)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x77, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nString);
	return result;
}

short CLeadDlg::SetDlgString(long nString, LPCTSTR pszString)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x78, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		nString, pszString);
	return result;
}

CLEADSaveType CLeadDlg::GetSaveFormats(long lIndex)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x79, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, parms,
		lIndex);
	return CLEADSaveType(pDispatch);
}

long CLeadDlg::GetSaveFormatCount()
{
	long result;
	InvokeHelper(0x7a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSaveFormatCount(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

COleFont CLeadDlg::GetDlgFont()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x7b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return COleFont(pDispatch);
}

void CLeadDlg::SetDlgFont(LPDISPATCH newValue)
{
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

short CLeadDlg::GetContourFilter(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7c, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

short CLeadDlg::GetContourThreshold()
{
	short result;
	InvokeHelper(0x7d, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetContourThreshold(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetContourDeltaDirection()
{
	short result;
	InvokeHelper(0x7e, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetContourDeltaDirection(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetContourMaximumError()
{
	short result;
	InvokeHelper(0x7f, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetContourMaximumError(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x7f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetContourOption()
{
	short result;
	InvokeHelper(0x80, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetContourOption(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x80, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CLeadDlg::GetContourOptionFlags()
{
	long result;
	InvokeHelper(0x81, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetContourOptionFlags(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

short CLeadDlg::GetSubTypeIndex()
{
	short result;
	InvokeHelper(0x82, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetSubTypeIndex(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CLeadDlg::GetResizeFlags()
{
	long result;
	InvokeHelper(0x83, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CLeadDlg::SetResizeFlags(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}
