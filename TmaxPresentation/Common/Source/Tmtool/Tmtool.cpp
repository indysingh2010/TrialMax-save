// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "tmtool.h"

/////////////////////////////////////////////////////////////////////////////
// CTMTool

IMPLEMENT_DYNCREATE(CTMTool, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CTMTool properties

OLE_COLOR CTMTool::GetBackColor()
{
	OLE_COLOR result;
	GetProperty(DISPID_BACKCOLOR, VT_I4, (void*)&result);
	return result;
}

void CTMTool::SetBackColor(OLE_COLOR propVal)
{
	SetProperty(DISPID_BACKCOLOR, VT_I4, propVal);
}

BOOL CTMTool::GetEnabled()
{
	BOOL result;
	GetProperty(DISPID_ENABLED, VT_BOOL, (void*)&result);
	return result;
}

void CTMTool::SetEnabled(BOOL propVal)
{
	SetProperty(DISPID_ENABLED, VT_BOOL, propVal);
}

CString CTMTool::GetIniFile()
{
	CString result;
	GetProperty(0x1, VT_BSTR, (void*)&result);
	return result;
}

void CTMTool::SetIniFile(LPCTSTR propVal)
{
	SetProperty(0x1, VT_BSTR, propVal);
}

short CTMTool::GetOrientation()
{
	short result;
	GetProperty(0x2, VT_I2, (void*)&result);
	return result;
}

void CTMTool::SetOrientation(short propVal)
{
	SetProperty(0x2, VT_I2, propVal);
}

short CTMTool::GetButtonSize()
{
	short result;
	GetProperty(0x3, VT_I2, (void*)&result);
	return result;
}

void CTMTool::SetButtonSize(short propVal)
{
	SetProperty(0x3, VT_I2, propVal);
}

short CTMTool::GetVerBuild()
{
	short result;
	GetProperty(0x4, VT_I2, (void*)&result);
	return result;
}

void CTMTool::SetVerBuild(short propVal)
{
	SetProperty(0x4, VT_I2, propVal);
}

short CTMTool::GetVerMajor()
{
	short result;
	GetProperty(0x5, VT_I2, (void*)&result);
	return result;
}

void CTMTool::SetVerMajor(short propVal)
{
	SetProperty(0x5, VT_I2, propVal);
}

short CTMTool::GetVerMinor()
{
	short result;
	GetProperty(0x6, VT_I2, (void*)&result);
	return result;
}

void CTMTool::SetVerMinor(short propVal)
{
	SetProperty(0x6, VT_I2, propVal);
}

BOOL CTMTool::GetAutoInit()
{
	BOOL result;
	GetProperty(0x7, VT_BOOL, (void*)&result);
	return result;
}

void CTMTool::SetAutoInit(BOOL propVal)
{
	SetProperty(0x7, VT_BOOL, propVal);
}

BOOL CTMTool::GetEnableErrors()
{
	BOOL result;
	GetProperty(0x8, VT_BOOL, (void*)&result);
	return result;
}

void CTMTool::SetEnableErrors(BOOL propVal)
{
	SetProperty(0x8, VT_BOOL, propVal);
}

short CTMTool::GetStyle()
{
	short result;
	GetProperty(0x9, VT_I2, (void*)&result);
	return result;
}

void CTMTool::SetStyle(short propVal)
{
	SetProperty(0x9, VT_I2, propVal);
}

BOOL CTMTool::GetStretch()
{
	BOOL result;
	GetProperty(0xa, VT_BOOL, (void*)&result);
	return result;
}

void CTMTool::SetStretch(BOOL propVal)
{
	SetProperty(0xa, VT_BOOL, propVal);
}

CString CTMTool::GetButtonMask()
{
	CString result;
	GetProperty(0xb, VT_BSTR, (void*)&result);
	return result;
}

void CTMTool::SetButtonMask(LPCTSTR propVal)
{
	SetProperty(0xb, VT_BSTR, propVal);
}

BOOL CTMTool::GetToolTips()
{
	BOOL result;
	GetProperty(0xc, VT_BOOL, (void*)&result);
	return result;
}

void CTMTool::SetToolTips(BOOL propVal)
{
	SetProperty(0xc, VT_BOOL, propVal);
}

BOOL CTMTool::GetConfigurable()
{
	BOOL result;
	GetProperty(0xd, VT_BOOL, (void*)&result);
	return result;
}

void CTMTool::SetConfigurable(BOOL propVal)
{
	SetProperty(0xd, VT_BOOL, propVal);
}

CString CTMTool::GetVerTextLong()
{
	CString result;
	GetProperty(0xe, VT_BSTR, (void*)&result);
	return result;
}

void CTMTool::SetVerTextLong(LPCTSTR propVal)
{
	SetProperty(0xe, VT_BSTR, propVal);
}

CString CTMTool::GetIniSection()
{
	CString result;
	GetProperty(0xf, VT_BSTR, (void*)&result);
	return result;
}

void CTMTool::SetIniSection(LPCTSTR propVal)
{
	SetProperty(0xf, VT_BSTR, propVal);
}

short CTMTool::GetButtonRows()
{
	short result;
	GetProperty(0x10, VT_I2, (void*)&result);
	return result;
}

void CTMTool::SetButtonRows(short propVal)
{
	SetProperty(0x10, VT_I2, propVal);
}

BOOL CTMTool::GetAutoReset()
{
	BOOL result;
	GetProperty(0x11, VT_BOOL, (void*)&result);
	return result;
}

void CTMTool::SetAutoReset(BOOL propVal)
{
	SetProperty(0x11, VT_BOOL, propVal);
}

BOOL CTMTool::GetUseSystemBackground()
{
	BOOL result;
	GetProperty(0x100, VT_BOOL, (void*)&result);
	return result;
}

void CTMTool::SetUseSystemBackground(BOOL propVal)
{
	SetProperty(0x100, VT_BOOL, propVal);
}

short CTMTool::GetVerQEF()
{
	short result;
	GetProperty(0x101, VT_I2, (void*)&result);
	return result;
}

void CTMTool::SetVerQEF(short propVal)
{
	SetProperty(0x101, VT_I2, propVal);
}

CString CTMTool::GetVerTextShort()
{
	CString result;
	GetProperty(0x102, VT_BSTR, (void*)&result);
	return result;
}

void CTMTool::SetVerTextShort(LPCTSTR propVal)
{
	SetProperty(0x102, VT_BSTR, propVal);
}

CString CTMTool::GetVerBuildDate()
{
	CString result;
	GetProperty(0x103, VT_BSTR, (void*)&result);
	return result;
}

void CTMTool::SetVerBuildDate(LPCTSTR propVal)
{
	SetProperty(0x103, VT_BSTR, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CTMTool operations

short CTMTool::GetBarWidth()
{
	short result;
	InvokeHelper(0x12, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CTMTool::GetBarHeight()
{
	short result;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CTMTool::SetButtonImage(short sId, short sImage)
{
	short result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x14, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		sId, sImage);
	return result;
}

short CTMTool::Initialize()
{
	short result;
	InvokeHelper(0x15, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CTMTool::ResetFrame()
{
	short result;
	InvokeHelper(0x16, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CTMTool::SetColorButton(short sId)
{
	short result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x17, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		sId);
	return result;
}

short CTMTool::SetToolButton(short sId)
{
	short result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x18, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		sId);
	return result;
}

BOOL CTMTool::IsButton(short sId)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x19, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		sId);
	return result;
}

CString CTMTool::GetButtonLabel(short sId)
{
	CString result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x1a, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		sId);
	return result;
}

short CTMTool::SetButtonMap(short* pMap)
{
	short result;
	static BYTE parms[] =
		VTS_PI2;
	InvokeHelper(0x1b, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		pMap);
	return result;
}

short CTMTool::SetPlayButton(BOOL bPlaying)
{
	short result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x1c, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		bPlaying);
	return result;
}

short CTMTool::SetSplitButton(BOOL bSplit, BOOL bHorizontal)
{
	short result;
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL;
	InvokeHelper(0x1d, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		bSplit, bHorizontal);
	return result;
}

short CTMTool::SetLinkButton(BOOL bDisabled)
{
	short result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x1e, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		bDisabled);
	return result;
}

short CTMTool::Configure()
{
	short result;
	InvokeHelper(0x1f, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CTMTool::SetButtonLabel(short sId, LPCTSTR lpLabel)
{
	short result;
	static BYTE parms[] =
		VTS_I2 VTS_BSTR;
	InvokeHelper(0x20, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		sId, lpLabel);
	return result;
}

short CTMTool::CheckButton(short sId, BOOL bCheck)
{
	short result;
	static BYTE parms[] =
		VTS_I2 VTS_BOOL;
	InvokeHelper(0x21, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		sId, bCheck);
	return result;
}

short CTMTool::EnableButton(short sId, BOOL bEnable)
{
	short result;
	static BYTE parms[] =
		VTS_I2 VTS_BOOL;
	InvokeHelper(0x22, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		sId, bEnable);
	return result;
}

short CTMTool::HideButton(short sId, BOOL bHide)
{
	short result;
	static BYTE parms[] =
		VTS_I2 VTS_BOOL;
	InvokeHelper(0x23, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		sId, bHide);
	return result;
}

short CTMTool::Popup(long hWnd)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x24, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd);
	return result;
}

short CTMTool::GetImageIndex(short sId)
{
	short result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x25, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		sId);
	return result;
}

short CTMTool::GetButtonId(short sImageIndex)
{
	short result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x26, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		sImageIndex);
	return result;
}

short CTMTool::SetShapeButton(short sId)
{
	short result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x27, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		sId);
	return result;
}

short CTMTool::GetButtonMap(short* paMap)
{
	short result;
	static BYTE parms[] =
		VTS_PI2;
	InvokeHelper(0x28, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		paMap);
	return result;
}

short CTMTool::Save()
{
	short result;
	InvokeHelper(0x29, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

CString CTMTool::GetClassIdString()
{
	CString result;
	InvokeHelper(0x2a, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CTMTool::GetRegisteredPath()
{
	CString result;
	InvokeHelper(0x2b, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

short CTMTool::Reset()
{
	short result;
	InvokeHelper(0x2c, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CTMTool::SetZoomButton(BOOL bZoom, BOOL bRestricted)
{
	short result;
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL;
	InvokeHelper(0x2d, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		bZoom, bRestricted);
	return result;
}

short CTMTool::GetSortOrder(short* pOrder)
{
	short result;
	static BYTE parms[] =
		VTS_PI2;
	InvokeHelper(0x2e, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		pOrder);
	return result;
}

short CTMTool::GetSortedId(short sId)
{
	short result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x2f, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		sId);
	return result;
}

short CTMTool::GetButtonActualWidth()
{
	short result;	
	InvokeHelper(0x30, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CTMTool::GetBarXPosition()
{
	short result;	
	InvokeHelper(0x31, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CTMTool::GetButtonXPosition(short sId)
{
	short result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x32, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		sId);
	return result;
}

void CTMTool::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
