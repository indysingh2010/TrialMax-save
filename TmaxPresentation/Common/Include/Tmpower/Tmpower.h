#if !defined(AFX_TMPOWER_H__F32953CF_8A05_4F66_9761_764720A5C795__INCLUDED_)
#define AFX_TMPOWER_H__F32953CF_8A05_4F66_9761_764720A5C795__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CTMPower wrapper class

class CTMPower : public CWnd
{
protected:
	DECLARE_DYNCREATE(CTMPower)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xbd138fdb, 0x21b2, 0x4cf1, { 0x81, 0x75, 0xa9, 0x41, 0x82, 0xfe, 0xd7, 0x81 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	BOOL GetAutoInit();
	void SetAutoInit(BOOL);
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	short GetVerBuild();
	void SetVerBuild(short);
	BOOL GetEnableErrors();
	void SetEnableErrors(BOOL);
	short GetVerMajor();
	void SetVerMajor(short);
	short GetVerMinor();
	void SetVerMinor(short);
	CString GetVerTextLong();
	void SetVerTextLong(LPCTSTR);
	BOOL GetSplitScreen();
	void SetSplitScreen(BOOL);
	short GetSplitFrameThickness();
	void SetSplitFrameThickness(short);
	unsigned long GetSplitFrameColor();
	void SetSplitFrameColor(unsigned long);
	CString GetRightFile();
	void SetRightFile(LPCTSTR);
	CString GetLeftFile();
	void SetLeftFile(LPCTSTR);
	BOOL GetSyncViews();
	void SetSyncViews(BOOL);
	short GetActiveView();
	void SetActiveView(short);
	long GetStartSlide();
	void SetStartSlide(long);
	short GetBorderStyle();
	void SetBorderStyle(short);
	BOOL GetEnableAccelerators();
	void SetEnableAccelerators(BOOL);
	BOOL GetUseSlideId();
	void SetUseSlideId(BOOL);
	short GetSaveFormat();
	void SetSaveFormat(short);
	BOOL GetHideTaskBar();
	void SetHideTaskBar(BOOL);
	BOOL GetEnableAxErrors();
	void SetEnableAxErrors(BOOL);
	short GetVerQEF();
	void SetVerQEF(short);
	CString GetVerTextShort();
	void SetVerTextShort(LPCTSTR);
	CString GetVerBuildDate();
	void SetVerBuildDate(LPCTSTR);

// Operations
public:
	short Initialize();
	BOOL IsInitialized();
	CString GetPPVersion();
	CString GetPPBuild();
	short Next(short sView);
	short Previous(short sView);
	short First(short sView);
	short Last(short sView);
	long GetCurrentSlide(short sView);
	long GetSlideCount(short sView);
	short Close();
	short Unload(short sView);
	CString GetFilename(short sView);
	long GetBitmap(long pWidth, long pHeight, short sView);
	short ShowSnapshot(short sView);
	short SaveSlide(LPCTSTR lpFilename, short sView);
	short CopySlide(short sView);
	void SetData(short sView, long lData);
	long GetData(short sView);
	short SetFocusWnd(long hWnd);
	short Show(short sShow);
	short GetCurrentState(short sView);
	short SetSlide(short sView, long lSlide, short bUseId);
	short LoadFile(LPCTSTR lpszFilename, long lSlide, short bUseId, short sView);
	long GetSlideNumber(short sView, long lSlideId);
	CString GetClassIdString();
	CString GetRegisteredPath();
	short GetAnimationCount(short sView);
	short GetAnimationIndex(short sView);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_TMPOWER_H__F32953CF_8A05_4F66_9761_764720A5C795__INCLUDED_)
