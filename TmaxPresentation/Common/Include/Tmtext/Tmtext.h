#if !defined(AFX_TMTEXT_H__79B215A9_2319_4C46_B1C6_D380E58A2092__INCLUDED_)
#define AFX_TMTEXT_H__79B215A9_2319_4C46_B1C6_D380E58A2092__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class COleFont;

/////////////////////////////////////////////////////////////////////////////
// CTMText wrapper class

class CTMText : public CWnd
{
protected:
	DECLARE_DYNCREATE(CTMText)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xaa52288d, 0x2a50, 0x494f, { 0x98, 0xfe, 0xff, 0xf0, 0xd9, 0xfb, 0xde, 0x56 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	BOOL GetAutoInit();
	void SetAutoInit(BOOL);
	short GetVerBuild();
	void SetVerBuild(short);
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	BOOL GetEnableErrors();
	void SetEnableErrors(BOOL);
	COleFont GetFont();
	void SetFont(LPDISPATCH);
	OLE_COLOR GetForeColor();
	void SetForeColor(OLE_COLOR);
	short GetVerMajor();
	void SetVerMajor(short);
	short GetVerMinor();
	void SetVerMinor(short);
	unsigned long GetHighlightColor();
	void SetHighlightColor(unsigned long);
	unsigned long GetHighlightTextColor();
	void SetHighlightTextColor(unsigned long);
	short GetHighlightLines();
	void SetHighlightLines(short);
	short GetDisplayLines();
	void SetDisplayLines(short);
	BOOL GetCombineDesignations();
	void SetCombineDesignations(BOOL);
	BOOL GetShowPageLine();
	void SetShowPageLine(BOOL);
	BOOL GetUseAvgCharWidth();
	void SetUseAvgCharWidth(BOOL);
	BOOL GetResizeOnChange();
	void SetResizeOnChange(BOOL);
	short GetMaxCharsPerLine();
	void SetMaxCharsPerLine(short);
	short GetTopMargin();
	void SetTopMargin(short);
	short GetBottomMargin();
	void SetBottomMargin(short);
	short GetLeftMargin();
	void SetLeftMargin(short);
	short GetRightMargin();
	void SetRightMargin(short);
	CString GetVerTextLong();
	void SetVerTextLong(LPCTSTR);
	BOOL GetSmoothScroll();
	void SetSmoothScroll(BOOL);
	short GetScrollTime();
	void SetScrollTime(short);
	short GetScrollSteps();
	void SetScrollSteps(short);
	BOOL GetUseLineColor();
	void SetUseLineColor(BOOL);
	short GetVerQEF();
	void SetVerQEF(short);
	CString GetVerTextShort();
	void SetVerTextShort(LPCTSTR);
	CString GetVerBuildDate();
	void SetVerBuildDate(LPCTSTR);
	BOOL GetShowText();
	void SetShowText(BOOL);
	short GetBulletStyle();
	void SetBulletStyle(short);
	short GetBulletMargin();
	void SetBulletMargin(short);

// Operations
public:
	short Initialize();
	short GetMinHeight();
	long GetCurrentLine();
	short ResizeFont(short bRedraw);
	short IsFirstLine();
	short IsLastLine();
	short Next(short bRedraw);
	short Previous(short bRedraw);
	short SetLineObject(long lLine, short bRedraw);
	short SetMaxWidth(short sWidth, short bRedraw);
	short SetPlaylist(long lPlaylist, short bRedraw);
	short GetCharHeight();
	short GetCharWidth();
	short GetLogFont(long lLogFont);
	BOOL IsReady();
	short SetLine(long lDesignation, long lPageNum, long lLineNum, short bRedraw);
	CString GetRegisteredPath();
	CString GetClassIdString();
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_TMTEXT_H__79B215A9_2319_4C46_B1C6_D380E58A2092__INCLUDED_)
