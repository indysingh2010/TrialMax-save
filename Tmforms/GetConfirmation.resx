<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="m_ctrlIconHolder.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>